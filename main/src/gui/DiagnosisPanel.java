/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Container;
import java.util.HashMap;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import net.sf.clipsrules.jni.*;

/**
 *
 * @author laura
 */
public class DiagnosisPanel extends javax.swing.JPanel {
    
     
   DefaultTableModel scoreTable;
    private Environment clips;
    private Patient patient; 
    private boolean isExecuting = false; 
    Thread executionThread;
    private String recomendation;

   
    /**
     * Creates new form DiagnosisPanel
     */
    public DiagnosisPanel() {
        initComponents();
       /*
        //solo he pensado
        
        //Coger todos los scores para mostrarlos en la tabla
        // FactAddressValue pathology = clips.findFact("-----");
        
        //Coger la pathology que salga de CLIPS con el score
        scoreTable=new DefaultTableModel();
        scoreTable = (DefaultTableModel) jTable1.getModel();
        for(int i=0; i<=patient.getPathologies().size(); i++){
            scoreTable.addRow(new Object[]{patient.getPathologies()}); 
            
        }        //wineList.addRow(new Object[] { wineName, new Integer(certainty) });
      
       
     
       float score= 1.2f; 
       patient.addPathology(new Pathology("Peritonsillar abscess", score));
       */
       
        //La tabla se rellena asÃ­ y funciona
      
       scoreTable=new DefaultTableModel();
       scoreTable = (DefaultTableModel) jTable1.getModel();
       scoreTable.addRow(new Object[]{"Mononucleosis", "98"}); 
       //String pathology= (String) patient.getPathologies().first(); 
       String pathology ="Mononucleosis"; //Esto es una prueba se puede borrar
       
       
        // String score = pathology.getScore("score").toString();
        //System.out.println(" Score Mono: " + score);
        
       //Seria mejor que fuera otro mapa
       switch (pathology) {
           case "Mononucleosis":
               recomendation="ESTO ES UNA PRUEBA ";
               break;
           case "Strep throat":
               recomendation= " ";
               break;
           case "Viral Pharingitis":
               recomendation= " ";
               break;
           case "Pharyngeal cancer":
               recomendation= " ";
               break;
           case "Foreign body":
               recomendation= " ";
               break;
           case "Peritonsillar abscess":
               recomendation= " ";
               break;
           default:
               break;
       }
    
        System.out.println(" Recomendation: " + recomendation);
        Message_TextArea.setText((String) recomendation);
        Message_TextArea.setLineWrap(true);   
    }
        


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Message_TextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(180, 220, 210));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        jLabel1.setBackground(new java.awt.Color(210, 240, 240));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 75, 75));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PATIENT'S RESULTS:");

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(210, 240, 240));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pathology", "Score"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Recomendations:");

        Message_TextArea.setColumns(20);
        Message_TextArea.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        Message_TextArea.setRows(5);
        jScrollPane2.setViewportView(Message_TextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
           
        changePanel();
        /* if (isExecuting) return;
        //reset clips
        //crear thread de clips + callback (update diagnosis)
        Runnable clipsThread  = new Runnable() {
            public void run() {
                try {
                    clips.run();
                } catch (CLIPSException e) {
                    e.printStackTrace();
                }
                
                SwingUtilities.invokeLater(
                        new Runnable() {
                            public void run() {
                                try {
                                    changePanel();
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
                            }});
            };
        };
        isExecuting = true;
        executionThread = new Thread(clipsThread);
        executionThread.start();
        
        //cambio panel
   */
    
    }//GEN-LAST:event_jButton2ActionPerformed
private void changePanel(){
        Container container = this.getParent();
        container.removeAll();
        PatientInfoPanel panel = new PatientInfoPanel();
        container.add(panel);
        container.revalidate();
        container.repaint();
        panel.setVisible(true);
        
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Message_TextArea;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

   
   
}
