/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Container;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import net.sf.clipsrules.jni.CLIPSException;
import net.sf.clipsrules.jni.Environment;
import net.sf.clipsrules.jni.FactAddressValue;
import net.sf.clipsrules.jni.StringValue;

/**
 *
 * @author Legion
 */
public class PatientInfoPanel extends javax.swing.JPanel {

    private Environment clips;
    private Patient patient; 
    private boolean isExecuting = false; 
    Thread executionThread;

    /**
     * Creates new form PatientInfoPanel
     */
    public PatientInfoPanel() {
        initComponents();
        clips = new Environment();
        try {
            clips.loadFromResource("/resources/inferenceEngine_ThroatPath.clp");
        } catch (CLIPSException e) {
            //Maybe show alert
            e.printStackTrace();
             System.out.println("Exiting");
            System.exit(1);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Exiting");
            System.exit(1);
        }
    }

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exudateGroup = new javax.swing.ButtonGroup();
        nodesGroup = new javax.swing.ButtonGroup();
        coughGroup = new javax.swing.ButtonGroup();
        fatigueGroup = new javax.swing.ButtonGroup();
        swallowGroup = new javax.swing.ButtonGroup();
        spleenGroup = new javax.swing.ButtonGroup();
        tonsilsGroup = new javax.swing.ButtonGroup();
        buttonPanel = new javax.swing.JPanel();
        nextButton = new javax.swing.JButton();
        questionsPanels = new javax.swing.JPanel();
        feverLabel = new javax.swing.JLabel();
        feverComboBox = new javax.swing.JComboBox<>();
        exhudateYesButton = new javax.swing.JRadioButton();
        exhudateNoButton = new javax.swing.JRadioButton();
        exhudateLabel = new javax.swing.JLabel();
        nodesYesButton = new javax.swing.JRadioButton();
        nodesNoButton = new javax.swing.JRadioButton();
        nodesLabel = new javax.swing.JLabel();
        coughYesButton = new javax.swing.JRadioButton();
        coughNoButton = new javax.swing.JRadioButton();
        coughLabel = new javax.swing.JLabel();
        fatigueLabel = new javax.swing.JLabel();
        swallowLabel = new javax.swing.JLabel();
        tonsilsLabel = new javax.swing.JLabel();
        fatigueYesButton = new javax.swing.JRadioButton();
        fatigueNoButton = new javax.swing.JRadioButton();
        swallowYesButton = new javax.swing.JRadioButton();
        swallowNoButton = new javax.swing.JRadioButton();
        spleenYesButton = new javax.swing.JRadioButton();
        spleenNoButton = new javax.swing.JRadioButton();
        tonsilsYesButton = new javax.swing.JRadioButton();
        tonsilsNoButton = new javax.swing.JRadioButton();
        spleenLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        buttonPanel.setMaximumSize(new java.awt.Dimension(100, 50));
        buttonPanel.setPreferredSize(new java.awt.Dimension(400, 50));

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(772, Short.MAX_VALUE)
                .addComponent(nextButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nextButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        questionsPanels.setBackground(new java.awt.Color(180, 220, 210));
        questionsPanels.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        feverLabel.setBackground(new java.awt.Color(180, 210, 210));
        feverLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        feverLabel.setText("Does the patient have fever?");

        feverComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High", "Mild", "No" }));

        exhudateYesButton.setBackground(new java.awt.Color(180, 220, 210));
        exudateGroup.add(exhudateYesButton);
        exhudateYesButton.setText("Yes");

        exhudateNoButton.setBackground(new java.awt.Color(180, 220, 210));
        exudateGroup.add(exhudateNoButton);
        exhudateNoButton.setSelected(true);
        exhudateNoButton.setText("No");

        exhudateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exhudateLabel.setText("Does the patient present exhudate?");

        nodesYesButton.setBackground(new java.awt.Color(180, 220, 210));
        nodesGroup.add(nodesYesButton);
        nodesYesButton.setText("Yes");

        nodesNoButton.setBackground(new java.awt.Color(180, 220, 210));
        nodesGroup.add(nodesNoButton);
        nodesNoButton.setSelected(true);
        nodesNoButton.setText("No");

        nodesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nodesLabel.setText("Does the patient have swollen nodes?");

        coughYesButton.setBackground(new java.awt.Color(180, 220, 210));
        coughGroup.add(coughYesButton);
        coughYesButton.setText("Yes");

        coughNoButton.setBackground(new java.awt.Color(180, 220, 210));
        coughGroup.add(coughNoButton);
        coughNoButton.setSelected(true);
        coughNoButton.setText("No");

        coughLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coughLabel.setText("Does the patient have cough?");

        fatigueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fatigueLabel.setText("Does the patient have fatigue?");

        swallowLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        swallowLabel.setText("Does the patient have trouble swallowing?");

        tonsilsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tonsilsLabel.setText("Does the patien have swollen tonsils?");

        fatigueYesButton.setBackground(new java.awt.Color(180, 220, 210));
        fatigueGroup.add(fatigueYesButton);
        fatigueYesButton.setText("Yes");

        fatigueNoButton.setBackground(new java.awt.Color(180, 220, 210));
        fatigueGroup.add(fatigueNoButton);
        fatigueNoButton.setSelected(true);
        fatigueNoButton.setText("No");
        fatigueNoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fatigueNoButtonActionPerformed(evt);
            }
        });

        swallowYesButton.setBackground(new java.awt.Color(180, 220, 210));
        swallowGroup.add(swallowYesButton);
        swallowYesButton.setText("Yes");

        swallowNoButton.setBackground(new java.awt.Color(180, 220, 210));
        swallowGroup.add(swallowNoButton);
        swallowNoButton.setSelected(true);
        swallowNoButton.setText("No");

        spleenYesButton.setBackground(new java.awt.Color(180, 220, 210));
        spleenGroup.add(spleenYesButton);
        spleenYesButton.setText("Yes");

        spleenNoButton.setBackground(new java.awt.Color(180, 220, 210));
        spleenGroup.add(spleenNoButton);
        spleenNoButton.setSelected(true);
        spleenNoButton.setText("No");

        tonsilsYesButton.setBackground(new java.awt.Color(180, 220, 210));
        tonsilsGroup.add(tonsilsYesButton);
        tonsilsYesButton.setText("Yes");

        tonsilsNoButton.setBackground(new java.awt.Color(180, 220, 210));
        tonsilsGroup.add(tonsilsNoButton);
        tonsilsNoButton.setSelected(true);
        tonsilsNoButton.setText("No");

        spleenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spleenLabel.setText("Does the patient have a swollen spleen?");

        jPanel1.setBackground(new java.awt.Color(210, 240, 240));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 75, 75));
        jLabel1.setText("Patient's regarding information:");
        jLabel1.setAutoscrolls(true);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Imagen1.png"))); // NOI18N
        jLabel2.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(90, 90, 90))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout questionsPanelsLayout = new javax.swing.GroupLayout(questionsPanels);
        questionsPanels.setLayout(questionsPanelsLayout);
        questionsPanelsLayout.setHorizontalGroup(
            questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionsPanelsLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spleenLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tonsilsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(swallowLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(feverLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exhudateLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nodesLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coughLabel, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fatigueLabel, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 302, Short.MAX_VALUE)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(questionsPanelsLayout.createSequentialGroup()
                        .addComponent(swallowYesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(swallowNoButton))
                    .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsPanelsLayout.createSequentialGroup()
                            .addComponent(fatigueYesButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(fatigueNoButton))
                        .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsPanelsLayout.createSequentialGroup()
                                .addComponent(coughYesButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coughNoButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsPanelsLayout.createSequentialGroup()
                                .addComponent(nodesYesButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nodesNoButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsPanelsLayout.createSequentialGroup()
                                .addComponent(exhudateYesButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exhudateNoButton))
                            .addComponent(feverComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(questionsPanelsLayout.createSequentialGroup()
                            .addComponent(tonsilsYesButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tonsilsNoButton))
                        .addGroup(questionsPanelsLayout.createSequentialGroup()
                            .addComponent(spleenYesButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(spleenNoButton))))
                .addGap(59, 59, 59))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        questionsPanelsLayout.setVerticalGroup(
            questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questionsPanelsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feverComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(feverLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exhudateYesButton)
                    .addComponent(exhudateNoButton)
                    .addComponent(exhudateLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodesNoButton)
                    .addComponent(nodesYesButton)
                    .addComponent(nodesLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coughNoButton)
                    .addComponent(coughYesButton)
                    .addComponent(coughLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fatigueNoButton)
                    .addComponent(fatigueYesButton)
                    .addComponent(fatigueLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(swallowNoButton)
                    .addComponent(swallowYesButton)
                    .addComponent(swallowLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spleenNoButton)
                    .addComponent(spleenYesButton)
                    .addComponent(spleenLabel))
                .addGap(18, 18, 18)
                .addGroup(questionsPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tonsilsNoButton)
                    .addComponent(tonsilsYesButton)
                    .addComponent(tonsilsLabel))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        add(questionsPanels, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        try {
            if (isExecuting) return;
            //reset clips
            clips.reset();
            patient = new Patient();
            //assert facts: get all info
            assertFacts();
            //crear thread de clips + callback (update diagnosis)
            Runnable clipsThread
                    = new Runnable() {
                public void run() {
                    try {
                        clips.run();
                    } catch (CLIPSException e) {
                        e.printStackTrace();
                    }

                    SwingUtilities.invokeLater(
                            new Runnable() {
                        public void run() {
                            try { 
                                getDecision();
                                changePanel();
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        }});
                    };
                };
        isExecuting = true;
      
        executionThread = new Thread(clipsThread);
      
        executionThread.start();

            //cambio panel
        } catch (CLIPSException ex) {
            Logger.getLogger(PatientInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void fatigueNoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fatigueNoButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fatigueNoButtonActionPerformed

    private void assertFacts(){
        String fever;
        String exhudate;
        String sNodes;
        String sSpleen;
        String sTonsils;
        String cough;
        String fatigue;
        String swallowing;
        /*
        fever = feverComboBox.getSelectedItem().toString();
        if (fever.toLowerCase().equals("high") fever = h;
        if (fever.toLowerCase().equals("mild") fever = m;
        if (fever.toLowerCase().equals("no") fever = n;
        String exhudate;
        String sNodes;
        String sSpleen;
        String sTonsils;
        Stirng cough;
        String fatigue;
        String swallowing;
        
        if(exhudateYesButton.isSelected()){
            exhudate = y;
        } 
        else {
            exhudate= n;
        } 
        
        
        if(sNodesYesButton.isSelected()){
            sNodes = y;
        }
        else {
            sNodes = n;
        }
        
        
        if(sSpleenYesButton.isSelected()) {
            sSpleen = y;
        } 
        else {
            sSpleen = n;
        }
        
        
        if(sTonsilsYesButton.isSelected()) {
            sTonsils = y;
        }
        else {
            sTonsils = n;
        } 
        
        
        if(coughYesButton.isSelected()) {
            cough = y;
        } 
        else {
            cough = n;
        } 
        
        
        if(fatigueyesButton.isSelected()){
            fatigue = y;
        }
        else{
            fatigue = n;
        } 
        
        if(swallowingYesButton.isSelected()){
            swallowing = y;
        } 
        else {
            swallowing = n;
        } 
        
        
    */

       /*
        try{
        String fact = "(Patient (fever "+fever+") (exudate "+exhudate+") (s-spleen "+sSpleen+") (cough "+
                cough+") (fatigue "+fatigue+") (swallowing "+swallowing+") (s-spleen "+sSpleen+") (s-tonsils "+sTonsils+"))";
          clips.assertString(fact);
        
        patient = new Patient(fever, exudate, sSpleen, cough, fatigue, swallowing, sSpleen, sTonsils);
        }
        */
       
       
    }

    private void getDecision(){
        //try {
          /*  System.out.println("Getiting diagnosis");
            FactAddressValue fv = clips.findFact("Patient"); //only one fact actually
            String decisionComputed = (fv.getSlotValue("decision_computed")).toString();
            if(decisionComputed != "TRUE"){
                //Show alert something went wrong
            }
            else{
                float scoreMono = Float.parseFloat((fv.getSlotValue("score-mono")).toString());
                float scoreStrep = Float.parseFloat((fv.getSlotValue("score-strep")).toString());
                float scoreViral= Float.parseFloat((fv.getSlotValue("score-viral")).toString());
                float scoreCancer = Float.parseFloat((fv.getSlotValue("score-cancer")).toString());
                float scoreAbscess= Float.parseFloat((fv.getSlotValue("score-abscess")).toString());
                float scoreBody = Float.parseFloat((fv.getSlotValue("score-body")).toString());
                
                patient.addPathology(new Pathology("Mononucleosis", scoreMono));
                patient.addPathology(new Pathology("Strep throat", scoreStrep));
                patient.addPathology(new Pathology("Viral pharyngitis", scoreViral));
                patient.addPathology(new Pathology("Pharyngeal cancer", scoreCancer));
                patient.addPathology(new Pathology("Foreign body", scoreBody));
                patient.addPathology(new Pathology("Peritonsillar abscess", scoreAbscess));
            }
        } catch (CLIPSException ex) {
            Logger.getLogger(PatientInfoPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
        isExecuting = false; 
         
    }
    
    private void changePanel(){
        Container container = this.getParent();
        container.removeAll();
        DiagnosisPanel panel = new DiagnosisPanel();
        container.add(panel);
        container.revalidate();
        container.repaint();
        panel.setVisible(true);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.ButtonGroup coughGroup;
    private javax.swing.JLabel coughLabel;
    private javax.swing.JRadioButton coughNoButton;
    private javax.swing.JRadioButton coughYesButton;
    private javax.swing.JLabel exhudateLabel;
    private javax.swing.JRadioButton exhudateNoButton;
    private javax.swing.JRadioButton exhudateYesButton;
    private javax.swing.ButtonGroup exudateGroup;
    private javax.swing.ButtonGroup fatigueGroup;
    private javax.swing.JLabel fatigueLabel;
    private javax.swing.JRadioButton fatigueNoButton;
    private javax.swing.JRadioButton fatigueYesButton;
    private javax.swing.JComboBox<String> feverComboBox;
    private javax.swing.JLabel feverLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nextButton;
    private javax.swing.ButtonGroup nodesGroup;
    private javax.swing.JLabel nodesLabel;
    private javax.swing.JRadioButton nodesNoButton;
    private javax.swing.JRadioButton nodesYesButton;
    private javax.swing.JPanel questionsPanels;
    private javax.swing.ButtonGroup spleenGroup;
    private javax.swing.JLabel spleenLabel;
    private javax.swing.JRadioButton spleenNoButton;
    private javax.swing.JRadioButton spleenYesButton;
    private javax.swing.ButtonGroup swallowGroup;
    private javax.swing.JLabel swallowLabel;
    private javax.swing.JRadioButton swallowNoButton;
    private javax.swing.JRadioButton swallowYesButton;
    private javax.swing.ButtonGroup tonsilsGroup;
    private javax.swing.JLabel tonsilsLabel;
    private javax.swing.JRadioButton tonsilsNoButton;
    private javax.swing.JRadioButton tonsilsYesButton;
    // End of variables declaration//GEN-END:variables
}

